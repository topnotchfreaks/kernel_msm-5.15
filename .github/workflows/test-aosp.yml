name: "AOSP Kernel Build"
on:
  workflow_dispatch:
    inputs:
      kernelBranch:
        description: "AOSP Kernel branch (default if empty)"
        required: false
        type: string
        default: "common-android13-5.15-lts"

jobs:
  Build-AOSP-Kernel:
    name: "🛠 Build AOSP Kernel"
    runs-on: ubuntu-latest
    env:
      WORK_DIR: ${{ github.workspace }}
      KERNEL_DIR: "common"
      OUT_DIR: "out"
      ANDROID_KERNEL_BRANCH: ${{ github.event.inputs.kernelBranch }}
    
    steps:
      - name: "🚀 Setup environment"
        run: |
          sudo apt-get update && \
          sudo apt-get install -y repo rsync
      
      - name: "📥 Initialize repo"
        working-directory: ${{ env.WORK_DIR}}
        run: |
          repo init -u https://android.googlesource.com/kernel/manifest -b $ANDROID_KERNEL_BRANCH --depth=1
          repo sync --optimized-fetch -j8

          rm -rf .repo

      - name: "🧩 Apply GKI Fixup Patches"
        if: contains(env.ANDROID_KERNEL_BRANCH, '5.15')
        working-directory: ${{ env.WORK_DIR}}/common
        run: |
          set -e
          log() { echo "$(date '+%Y-%m-%d %H:%M:%S') - $1"; }

          PATCH_URLS=(
            "https://raw.githubusercontent.com/topnotchfreaks/kernel_patches/main/0001-gki-fixup.patch"
            "https://raw.githubusercontent.com/topnotchfreaks/kernel_patches/main/0001-Revert-bpf-fix-precision-backtracking-instruction-it.patch"
          )

          for url in "${PATCH_URLS[@]}"; do
            filename="$(basename "$url")"
            log "Downloading: $filename"

            if curl -sL -o "$filename" "$url" && [ -f "$filename" ]; then
              log "Applying: $filename"
              patch -p1 < "$filename" || log "Warning: Some hunks failed in $filename"
            else
              log "Failed to download: $filename"
            fi
          done

          log "✅ Patch processing complete"
      
      - name: "🔧 Set up build environment"
        working-directory: ${{ env.WORK_DIR}}
        run: |
          export KBUILD_BUILD_USER="GitHub"
          export KBUILD_BUILD_HOST="CI"
      
      - name: "🏗 Build kernel"
        working-directory: ${{ env.WORK_DIR }}
        run: |
          LTO=thin BUILD_CONFIG=common/build.config.gki.aarch64 build/build.sh -j8
      
      - name: "📦 Package with AnyKernel3"
        working-directory: ${{ env.WORK_DIR}}
        run: |
          echo "Downloading AnyKernel3..."
          git clone --depth=1 https://github.com/topnotchfreaks/AnyKernel3.git -b master
          cp $OUT_DIR/arch/arm64/boot/Image AnyKernel3/Image
          cd AnyKernel3
          zip -r9 "../kernel-${DEVICE}-${ANDROID_KERNEL_BRANCH}-$(date +%Y%m%d).zip" * -x .git/*
      
      - name: "📤 Upload Artifact"
        uses: actions/upload-artifact@v4
        with:
          name: aosp-kernel
          path: $KERNEL_DIR/kernel-${{ env.DEVICE }}-${{ env.ANDROID_KERNEL_BRANCH }}-*.zip